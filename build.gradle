plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.5'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.netflix.dgs.codegen' version "5.7.0"
}
apply plugin: 'com.netflix.dgs.codegen'

group = 'com.kgromov.graphql'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

sourceSets.main.java.srcDirs += 'build/generated/sources/dgs-codegen'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:6.0.1")
	}
}

dependencies {
	implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:6.0.1"))
	implementation("com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter")
	implementation("com.netflix.graphql.dgs:graphql-dgs-client")
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

generateJava{
	schemaPaths = ["${projectDir}/src/main/resources/schema"]
	packageName = 'com.kgromov.graphql.dgs'
	generateClient = true
}

tasks.named('test') {
	useJUnitPlatform()
}
